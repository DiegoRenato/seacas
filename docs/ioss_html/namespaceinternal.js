var namespaceinternal =
[
    [ "ansi_color_escape", "structinternal_1_1ansi__color__escape.html", "structinternal_1_1ansi__color__escape" ],
    [ "arg_converter", "classinternal_1_1arg__converter.html", "classinternal_1_1arg__converter" ],
    [ "arg_formatter_base", "classinternal_1_1arg__formatter__base.html", "classinternal_1_1arg__formatter__base" ],
    [ "arg_map", "classinternal_1_1arg__map.html", "classinternal_1_1arg__map" ],
    [ "arg_mapper", "structinternal_1_1arg__mapper.html", "structinternal_1_1arg__mapper" ],
    [ "arg_ref", "structinternal_1_1arg__ref.html", "structinternal_1_1arg__ref" ],
    [ "auto_id", "structinternal_1_1auto__id.html", null ],
    [ "basic_data", "structinternal_1_1basic__data.html", "structinternal_1_1basic__data" ],
    [ "basic_writer", "classinternal_1_1basic__writer.html", "classinternal_1_1basic__writer" ],
    [ "bits", "structinternal_1_1bits.html", "structinternal_1_1bits" ],
    [ "bool_pack", "structinternal_1_1bool__pack.html", null ],
    [ "buffer", "classinternal_1_1buffer.html", "classinternal_1_1buffer" ],
    [ "buffer_range", "classinternal_1_1buffer__range.html", "classinternal_1_1buffer__range" ],
    [ "char_converter", "classinternal_1_1char__converter.html", "classinternal_1_1char__converter" ],
    [ "char_specs_checker", "classinternal_1_1char__specs__checker.html", "classinternal_1_1char__specs__checker" ],
    [ "char_t_impl", "structinternal_1_1char__t__impl.html", null ],
    [ "char_t_impl< S, enable_if_t< is_string< S >::value > >", "structinternal_1_1char__t__impl_3_01S_00_01enable__if__t_3_01is__string_3_01S_01_4_1_1value_01_4_01_4.html", "structinternal_1_1char__t__impl_3_01S_00_01enable__if__t_3_01is__string_3_01S_01_4_1_1value_01_4_01_4" ],
    [ "chrono_format_checker", "structinternal_1_1chrono__format__checker.html", "structinternal_1_1chrono__format__checker" ],
    [ "chrono_formatter", "structinternal_1_1chrono__formatter.html", "structinternal_1_1chrono__formatter" ],
    [ "color_type", "structinternal_1_1color__type.html", "structinternal_1_1color__type" ],
    [ "compiletime_parts_provider", "structinternal_1_1compiletime__parts__provider.html", "structinternal_1_1compiletime__parts__provider" ],
    [ "compiletime_prepared_parts_collector", "classinternal_1_1compiletime__prepared__parts__collector.html", "classinternal_1_1compiletime__prepared__parts__collector" ],
    [ "compiletime_prepared_parts_type_provider", "classinternal_1_1compiletime__prepared__parts__type__provider.html", "classinternal_1_1compiletime__prepared__parts__type__provider" ],
    [ "conditional_helper", "structinternal_1_1conditional__helper.html", null ],
    [ "container_buffer", "classinternal_1_1container__buffer.html", "classinternal_1_1container__buffer" ],
    [ "counting_iterator", "classinternal_1_1counting__iterator.html", "classinternal_1_1counting__iterator" ],
    [ "cstring_type_checker", "classinternal_1_1cstring__type__checker.html", "classinternal_1_1cstring__type__checker" ],
    [ "custom_formatter", "classinternal_1_1custom__formatter.html", "classinternal_1_1custom__formatter" ],
    [ "custom_value", "structinternal_1_1custom__value.html", "structinternal_1_1custom__value" ],
    [ "data", "structinternal_1_1data.html", null ],
    [ "decimal_formatter", "classinternal_1_1decimal__formatter.html", "classinternal_1_1decimal__formatter" ],
    [ "dynamic_format_specs", "structinternal_1_1dynamic__format__specs.html", "structinternal_1_1dynamic__format__specs" ],
    [ "dynamic_specs_handler", "classinternal_1_1dynamic__specs__handler.html", "classinternal_1_1dynamic__specs__handler" ],
    [ "error_handler", "structinternal_1_1error__handler.html", "structinternal_1_1error__handler" ],
    [ "fallback_formatter", "structinternal_1_1fallback__formatter.html", "structinternal_1_1fallback__formatter" ],
    [ "fallback_formatter< T, Char, enable_if_t< is_streamable< T, Char >::value > >", "structinternal_1_1fallback__formatter_3_01T_00_01Char_00_01enable__if__t_3_01is__streamable_3_0105289f9fbc16beec2647eb32164f6572.html", "structinternal_1_1fallback__formatter_3_01T_00_01Char_00_01enable__if__t_3_01is__streamable_3_0105289f9fbc16beec2647eb32164f6572" ],
    [ "fallback_uintptr", "structinternal_1_1fallback__uintptr.html", "structinternal_1_1fallback__uintptr" ],
    [ "fill_t", "structinternal_1_1fill__t.html", "structinternal_1_1fill__t" ],
    [ "fixed_handler", "structinternal_1_1fixed__handler.html", "structinternal_1_1fixed__handler" ],
    [ "float_type_checker", "classinternal_1_1float__type__checker.html", "classinternal_1_1float__type__checker" ],
    [ "format_part", "structinternal_1_1format__part.html", "structinternal_1_1format__part" ],
    [ "format_preparation_handler", "classinternal_1_1format__preparation__handler.html", "classinternal_1_1format__preparation__handler" ],
    [ "format_string_checker", "classinternal_1_1format__string__checker.html", "classinternal_1_1format__string__checker" ],
    [ "formatbuf", "classinternal_1_1formatbuf.html", "classinternal_1_1formatbuf" ],
    [ "fp", "classinternal_1_1fp.html", "classinternal_1_1fp" ],
    [ "gen_digits_params", "structinternal_1_1gen__digits__params.html", "structinternal_1_1gen__digits__params" ],
    [ "grisu_shortest_handler", "structinternal_1_1grisu__shortest__handler.html", "structinternal_1_1grisu__shortest__handler" ],
    [ "id_adapter", "structinternal_1_1id__adapter.html", "structinternal_1_1id__adapter" ],
    [ "int_checker", "structinternal_1_1int__checker.html", "structinternal_1_1int__checker" ],
    [ "int_checker< true >", "structinternal_1_1int__checker_3_01true_01_4.html", "structinternal_1_1int__checker_3_01true_01_4" ],
    [ "int_type_checker", "classinternal_1_1int__type__checker.html", "classinternal_1_1int__type__checker" ],
    [ "integer_sequence", "structinternal_1_1integer__sequence.html", "structinternal_1_1integer__sequence" ],
    [ "is_contiguous_back_insert_iterator", "structinternal_1_1is__contiguous__back__insert__iterator.html", null ],
    [ "is_contiguous_back_insert_iterator< std::back_insert_iterator< Container > >", "structinternal_1_1is__contiguous__back__insert__iterator_3_01std_1_1back__insert__iterator_3_01Container_01_4_01_4.html", null ],
    [ "is_like_std_string", "classinternal_1_1is__like__std__string.html", "classinternal_1_1is__like__std__string" ],
    [ "is_like_std_string< fmt::basic_string_view< Char > >", "structinternal_1_1is__like__std__string_3_01fmt_1_1basic__string__view_3_01Char_01_4_01_4.html", null ],
    [ "is_output_iterator", "classinternal_1_1is__output__iterator.html", "classinternal_1_1is__output__iterator" ],
    [ "is_range_", "structinternal_1_1is__range__.html", null ],
    [ "is_range_< T, conditional_t< false, conditional_helper< decltype(std::declval< T >().begin()), decltype(std::declval< T >().end())>, void > >", "structinternal_1_1is__range___3_01T_00_01conditional__t_3_01false_00_01conditional__helper_3_01ddcdd363b04da56ec70280bf106515bbc.html", null ],
    [ "is_streamable", "classinternal_1_1is__streamable.html", "classinternal_1_1is__streamable" ],
    [ "is_string", "structinternal_1_1is__string.html", null ],
    [ "is_tuple_like_", "classinternal_1_1is__tuple__like__.html", "classinternal_1_1is__tuple__like__" ],
    [ "is_zero_int", "classinternal_1_1is__zero__int.html", "classinternal_1_1is__zero__int" ],
    [ "iterator_category", "structinternal_1_1iterator__category.html", null ],
    [ "iterator_category< It, void_t< typename It::iterator_category > >", "structinternal_1_1iterator__category_3_01It_00_01void__t_3_01typename_01It_1_1iterator__category_01_4_01_4.html", "structinternal_1_1iterator__category_3_01It_00_01void__t_3_01typename_01It_1_1iterator__category_01_4_01_4" ],
    [ "iterator_category< T * >", "structinternal_1_1iterator__category_3_01T_01_5_01_4.html", "structinternal_1_1iterator__category_3_01T_01_5_01_4" ],
    [ "locale_ref", "classinternal_1_1locale__ref.html", "classinternal_1_1locale__ref" ],
    [ "make_integer_sequence", "structinternal_1_1make__integer__sequence.html", null ],
    [ "make_integer_sequence< T, 0, Ns... >", "structinternal_1_1make__integer__sequence_3_01T_00_010_00_01Ns_8_8_8_01_4.html", null ],
    [ "make_unsigned_or_bool", "structinternal_1_1make__unsigned__or__bool.html", null ],
    [ "make_unsigned_or_bool< bool >", "structinternal_1_1make__unsigned__or__bool_3_01bool_01_4.html", "structinternal_1_1make__unsigned__or__bool_3_01bool_01_4" ],
    [ "make_unsigned_or_unchanged", "structinternal_1_1make__unsigned__or__unchanged.html", "structinternal_1_1make__unsigned__or__unchanged" ],
    [ "make_unsigned_or_unchanged< T, true >", "structinternal_1_1make__unsigned__or__unchanged_3_01T_00_01true_01_4.html", "structinternal_1_1make__unsigned__or__unchanged_3_01T_00_01true_01_4" ],
    [ "named_arg", "structinternal_1_1named__arg.html", "structinternal_1_1named__arg" ],
    [ "named_arg_base", "structinternal_1_1named__arg__base.html", "structinternal_1_1named__arg__base" ],
    [ "null", "structinternal_1_1null.html", null ],
    [ "numeric_specs_checker", "classinternal_1_1numeric__specs__checker.html", "classinternal_1_1numeric__specs__checker" ],
    [ "output_range", "classinternal_1_1output__range.html", "classinternal_1_1output__range" ],
    [ "part_counter", "structinternal_1_1part__counter.html", "structinternal_1_1part__counter" ],
    [ "precision_adapter", "structinternal_1_1precision__adapter.html", "structinternal_1_1precision__adapter" ],
    [ "precision_checker", "classinternal_1_1precision__checker.html", "classinternal_1_1precision__checker" ],
    [ "prepared_format", "classinternal_1_1prepared__format.html", "classinternal_1_1prepared__format" ],
    [ "printf_precision_handler", "classinternal_1_1printf__precision__handler.html", "classinternal_1_1printf__precision__handler" ],
    [ "printf_width_handler", "classinternal_1_1printf__width__handler.html", "classinternal_1_1printf__width__handler" ],
    [ "runtime_parts_provider", "classinternal_1_1runtime__parts__provider.html", "classinternal_1_1runtime__parts__provider" ],
    [ "specs_checker", "classinternal_1_1specs__checker.html", "classinternal_1_1specs__checker" ],
    [ "specs_handler", "classinternal_1_1specs__handler.html", "classinternal_1_1specs__handler" ],
    [ "specs_setter", "classinternal_1_1specs__setter.html", "classinternal_1_1specs__setter" ],
    [ "sprintf_specs", "structinternal_1_1sprintf__specs.html", "structinternal_1_1sprintf__specs" ],
    [ "std_string_view", "structinternal_1_1std__string__view.html", null ],
    [ "string_value", "structinternal_1_1string__value.html", "structinternal_1_1string__value" ],
    [ "string_view_metadata", "structinternal_1_1string__view__metadata.html", "structinternal_1_1string__view__metadata" ],
    [ "test_stream", "structinternal_1_1test__stream.html", "structinternal_1_1test__stream" ],
    [ "truncating_iterator", "classinternal_1_1truncating__iterator.html", null ],
    [ "truncating_iterator< OutputIt, std::false_type >", "classinternal_1_1truncating__iterator_3_01OutputIt_00_01std_1_1false__type_01_4.html", "classinternal_1_1truncating__iterator_3_01OutputIt_00_01std_1_1false__type_01_4" ],
    [ "truncating_iterator< OutputIt, std::true_type >", "classinternal_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4.html", "classinternal_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4" ],
    [ "truncating_iterator_base", "classinternal_1_1truncating__iterator__base.html", "classinternal_1_1truncating__iterator__base" ],
    [ "type_constant", "structinternal_1_1type__constant.html", null ],
    [ "value", "classinternal_1_1value.html", "classinternal_1_1value" ],
    [ "view", "structinternal_1_1view.html", null ],
    [ "void_t_impl", "structinternal_1_1void__t__impl.html", "structinternal_1_1void__t__impl" ],
    [ "width_adapter", "structinternal_1_1width__adapter.html", "structinternal_1_1width__adapter" ],
    [ "width_checker", "classinternal_1_1width__checker.html", "classinternal_1_1width__checker" ]
];